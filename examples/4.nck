function swap(a: *int, b: *int) -> void do
  h: int;
  h = *a;
  *a = *b;
  *b = h;
  return;
end

function insertionSort(arr: *int, size: int) -> *int do
  i: int;
  j: int;
  key: int;

  if (2 > size) do
    return arr;
  else
    i = 1;
    while (i < size) do
      key = *accessInt(arr,i);
      j = i - 1;
      while (j >= 0 && *accessInt(arr, j) > key) do
        *accessInt(arr, j+1) = *accessInt(arr, j);
        j = j-1;
      end
      *accessInt(arr,j+1) = key;
      i = i + 1;
    end
    return arr;
  end
  return arr;
end


function main () -> void do
    c: *int;
    i: int;
    k: int;
    i = 0;
    k = 10;

    c = allocIntArray(10);
    while (i < 10) do
      *accessInt(c, i) = k;
      printInt(*accessInt(c, i));
      k = k - 1;
      i = i + 1;
    end
    insertionSort(c, 10);
    
    i = 0;

    while (i < 10) do
      printInt(*accessInt(c, i));
      i = i + 1;
    end
    freeInt(c);
    return;
end
