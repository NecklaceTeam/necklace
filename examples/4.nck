function insertionSort(arr: *int, size: int) -> *int do
  i: int;
  j: int;
  key: int;

  if (2 > size) do
    return arr;
  else
    i = 1;
    while (i < size) do
      key = *(arr >> i);
      j = i - 1;
      while (j >= 0 && *(arr >> j) > key) do
        *(arr >> j+1) = *(arr >> j);
        j = j-1;
      end
      *(arr >> j+1) = key;
      i = i + 1;
    end
    return arr;
  end
  return arr;
end


function main -> int do
    c: *int;
    i: int;
    k: int;
    i = 0;
    k = 10;

    c = allocIntArray(10);
    while (i < 10) do
      *(c >> i) = k;
      printInt(*(c >> i));
      k = k - 1;
      i = i + 1;
    end
    insertionSort(c, 10);
    
    i = 0;

    while (i < 10) do
      printInt(*(c >> i));
      i = i + 1;
    end
    freeInt(c);
    return 0;
end
